apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.tracee.name }}
  labels:
    {{- include "honeynet.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ .Values.tracee.name }}
    component: {{ .Values.tracee.name }}
    app.kubernetes.io/component: {{ .Values.tracee.name }}
spec:
  selector:
    matchLabels:
      {{- include "honeynet.labels" . | nindent 6 }}
      app.kubernetes.io/name: {{ .Values.tracee.name }}
      component: {{ .Values.tracee.name }}
  template:
    metadata:
      labels:
        {{- include "honeynet.labels" . | nindent 8 }}
        app.kubernetes.io/name: {{ .Values.tracee.name }}
        component: {{ .Values.tracee.name }}
        app.kubernetes.io/component: {{ .Values.tracee.name }}
    spec:
      serviceAccountName: {{ .Values.tracee.name }}
      hostPID: true
      securityContext: {}
      containers:
      {{- range $agent := .Values.agents }}
        - name: "{{ .Values.tracee.name }}-{{ $agent.name }}"
          command:
            - /tracee/tracee
          args:
            {{- range $arg:= $agent.args}}
            - $arg
            {{- end}}
            - --scope
            - uid={{ .Values.tracee.uuid }}
          image: {{ .Values.tracee.image.repository }}:{{.Values.tracee.image.tag }}
          imagePullPolicy: {{ .Values.tracee.image.imagePullPolicy }}
          env:
            - name: LIBBPFGO_OSRELEASE_FILE
              value: /etc/os-release-host
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          volumeMounts:
            - name: etc-os-release
              mountPath: /etc/os-release-host
              readOnly: true
            - name: cgroup-cpuset
              mountPath: /sys/fs/cgroup/cpuset
              readOnly: true
            - name: boot-config
              mountPath: /boot
              readOnly: true
            - mountPath: /var/run/containerd/containerd.sock
              name: containerd-sock
              readOnly: true
            - mountPath: /var/run/crio/crio.sock
              name: crio-sock
              readOnly: true
            - mountPath: /var/run/docker.sock
              name: docker-sock
              readOnly: true
            - mountPath: /var/run/podman/podman.sock
              name: podman-sock
              readOnly: true
            - name: {{ $agent.volumeMount.name }}
              mountPath: {{ $agent.volumeMount.mountPath }}
              subPathExpr: $(NODE_NAME)
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ $agent.healthzPort }}
      {{- end}}
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - name: etc-os-release
        hostPath:
          path: /etc/os-release
      - name: cgroup-cpuset
        hostPath:
          path: /sys/fs/cgroup/cpuset
      - name: boot-config
        hostPath:
          path: /boot
      - name: containerd-sock
        hostPath:
          path: /var/run/containerd/containerd.sock
      - name: crio-sock
        hostPath:
          path: /var/run/crio/crio.sock
      - name: podman-sock
        hostPath:
          path: /var/run/podman/podman.sock
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
      {{- range $agent := .Values.agents }}
      - name: $agent.volumeMount.name
        hostPath:
          path: $agent.volumeMount.hostPath
      {{- end}}