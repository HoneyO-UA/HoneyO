replicaCount: 1 # If auto scale disabled

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

nameOverride: ""
fullnameOverride: ""


redis:
  auth:
    enabled: false

es:
  name: "es"
  image:
    repository: "docker.elastic.co/elasticsearch/elasticsearch"
    pullPolicy: Always
    tag: "8.11.1"

  service:
    type: NodePort
    ports:
      - name: rest
        port: 9200
        nodePort: 31920
      - name: intra
        port: 9300
        nodePort: 31930

  storage:
    size: 50Gi

  resources:
    requests:
      cpu: 1000m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi


  podLabels: {}
  podAnnotations: {}
  imagePullSecrets: []

  livenessProbe: {}
  readinessProbe: {}

  volumeMounts: []
  volumes: []

kibana:
  name: "kibana"

  image:
    repository: "docker.elastic.co/kibana/kibana"
    pullPolicy: Always
    tag: "8.8.0"

  service:
    type: NodePort
    ports:
      - name: web
        port: 5601
        nodePort: 31601

  podLabels: {}
  podAnnotations: {}
  imagePullSecrets: []

  livenessProbe: {}
  readinessProbe: {}

  volumeMounts: []
  volumes: []

map:
  data:
    name: "map-data"

    image:
      repository: ""
      pullPolicy: Always
      tag: "latest"

    podLabels: {}
    podAnnotations: {}
    imagePullSecrets: []

    livenessProbe: {}
    readinessProbe: {}

    volumeMounts: []
    volumes: []

  web:
    name: "map-web"

    image:
      repository: ""
      pullPolicy: Always
      tag: "latest"

    service:
      type: NodePort
      ports:
        - name: web
          port: 64299
          protocol: TCP
          nodePort: 31299

    podLabels: {}
    podAnnotations: {}
    imagePullSecrets: []

    livenessProbe: {}
    readinessProbe: {}

    volumeMounts: []
    volumes: []